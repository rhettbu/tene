project_name: tenv
version: 1

before:
  hooks:
    - go mod tidy
    - go test ./...
    - go get -u ./cmd/tenv
    - go get -u ./cmd/tofu
    - go get -u ./cmd/terraform
    - go get -u ./cmd/terragrunt
    - go get -u ./cmd/tf
    - go get -u ./cmd/atmos

builds:
  - id: tenv
    main: ./cmd/tenv
    binary: tenv
    env:
      - CGO_ENABLED=0

    ldflags:
      - -s -w -X main.version={{.Tag}}
    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: tofu
    binary: tofu
    main: ./cmd/tofu
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: terraform
    binary: terraform
    main: ./cmd/terraform
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: terragrunt
    binary: terragrunt
    main: ./cmd/terragrunt
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: tf
    binary: tf
    main: ./cmd/tf
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: atmos
    binary: atmos
    main: ./cmd/atmos
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64


archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- .Tag }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

release:
  name_template: "Release {{.Tag}}"

changelog:
  use: github-native
  sort: asc
  filters:
    exclude:
      - "^test:"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Tag }}_checksums.txt"
  algorithm: sha256

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    signature: "${artifact}.sig"
    certificate: "${artifact}.pem"
    args:
      - "sign-blob"
      - "--oidc-issuer=https://token.actions.githubusercontent.com"
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: all
    output: true

  - artifacts: all
    signature: "${artifact}.gpgsig"
    id: gpg
    cmd: gpg
    args:
      - "--pinentry-mode"
      - "loopback"
      - "--batch"
      - "-u"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--passphrase"
      - "{{ .Env.GPG_PASSPHRASE }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

nfpms:
  - file_name_template: "{{ .ProjectName }}_{{- .Tag }}_{{ .Arch }}"
    maintainer: "https://github.com/dvaumoron"
    homepage: https://github.com/tofuutils/tenv
    description: >-
      tenv helps manage several version of OpenTofu (https://opentofu.org), Terraform (https://www.terraform.io/), Terragrunt (https://terragrunt.gruntwork.io), and Atmos (https://atmos.tools/),
      tenv is the managing command and tofu and terraform are proxy commands.
    license: "Apache-2.0"
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    bindir: /usr/bin
    section: default
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/tenv/copyright
        file_info:
          mode: 0444
    rpm:
      packager: tofuutils <tofuutils@gmail.com>
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE" }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    deb:
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE" }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    apk:
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE" }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    archlinux:
      pkgbase: tenv
      packager: tofuutils <tofuutils@gmail.com>

snapcrafts:
  - name: tenv
    publish: true
    summary: OpenTofu, Terraform, Terragrunt, and Atmos version manager, written in Go.
    description: |
      tenv is a versatile version manager for OpenTofu, Terraform, Terragrunt and Atmos, written in Go. 
      Our tool simplifies the complexity of handling different versions of these powerful tools, 
      ensuring developers and DevOps professionals 
      can focus on what matters most - building and deploying efficiently.
    disable: 'false'
    channel_templates:
      - 'latest/stable'
    grade: 'stable'
    confinement: classic
    license: Apache-2.0
    base: core22
    apps:
      tenv:
        command: tenv
        aliases: [ tenv ]
      tofu:
        command: tofu
        aliases: [ tofu ]
      terraform:
        command: terraform
        aliases: [ terraform ]
      terragrunt:
        command: terragrunt
        aliases: [ terragrunt ]
      tf:
        command: tf
        aliases: [ tf ]
      atmos:
        command: atmos
        aliases: [ atmos ]

# chocolateys:
#   - name: tenv
#     # Empty means all IDs.
#     ids: []
#     owners: tofuutils
#     title: tenv
#     authors: tofuutils
#     project_url: https://github.com/tofuutils/tenv
#     url_template: https://github.com/tofuutils/tenv/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
#     # App's icon.
#     icon_url: ""
#     copyright: 2024 tofuutils authors
#     license_url: https://github.com/tofuutils/tenv/blob/main/LICENSE
#     require_license_acceptance: false
#     project_source_url: https://github.com/tofuutils/tenv
#     docs_url: https://github.com/tofuutils/tenv/blob/main/README.md
#     tags: "terraform opentofu terragrunt tofuenv tfenv tenv"
#     summary: OpenTofu, Terraform, Terragrunt, and Atmos version manager, written in Go.
#     description: |
#       OpenTofu, Terraform, Terragrunt, and Atmos version manager, written in Go.
#     release_notes: "https://github.com/tofuutils/tenv/releases/tag/v{{ .Version }}"
#     dependencies:
#       - id: nfpm
#         version: 2.20.0
#     api_key: "{{ .Env.CHOCOLATEY_API_KEY }}"
#     source_repo: "https://push.chocolatey.org/"
#     skip_publish: false
#     goamd64: v1
